# ruby -rjson -ryaml -e 'puts JSON.pretty_generate(YAML.load(ARGF))' < file_name.yaml
#aws --profile its-admin cloudformation create-stack --stack-name som-bucket-stack --template-body file:///Users/mfrasier/Documents/som_aws.json --capabilities CAPABILITY_IAM --parameters ParameterKey=owner,ParameterValue=lmf4u ParameterKey=bucketName,ParameterValue=somimages.aws.virginia.edu ParameterKey=environment,ParameterValue=test --tags Key=owner,Value=lmf4u Key=environment,Value=test

AWSTemplateFormatVersion : 2010-09-09

Description: ITS AWS S3 bucket with IAM user

Metadata:
  Description: School of Medicine AWS assets

Parameters:
  bucketName:
    Description: Name of S3 bucket
    Type: String
    MinLength: 18
    MaxLength: 255
    AllowedPattern: "[a-zA-Z][a-zA-Z0-9]*.aws.virginia.edu"
    ConstraintDescription: Globally unique bucket name. Use hostname form [a-zA-Z][a-zA-Z0-9]*.aws.virginia.edu

  owner:
    Description: Owner of asset - for tagging
    Type: String
    MinLength: 3
    MaxLength: 20
    AllowedPattern: "[a-zA-Z][a-zA-Z0-9]*"

  environment:
    Description: Asset environment - for tagging
    Type: String
    AllowedValues: [ production, qa, test, dev ]


Mappings:
  RegionMap:
    us-east-1:
      hostedZoneID: Z3R0JPZ99YENHV


Resources:
  s3Bucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName:
        Ref: bucketName
      Tags:
      - Key: owner
        Value:
          Ref: owner
      - Key: environment
        Value:
          Ref: environment

  dnsEntry:
    Type: AWS::Route53::RecordSetGroup
    Properties:
      Comment: School of Medicine S3 Bucket URL
      HostedZoneId:
        Fn::FindInMap:
        - RegionMap
        - Ref: AWS::Region
        - hostedZoneID
      RecordSets:
      - Type: CNAME
        TTL: 300
        Name:
          Fn::Join:
          - ""
          -
            - Ref: bucketName
            - "."
        ResourceRecords:
        - Fn::GetAtt:
          - s3Bucket
          - DomainName

  user:
    Type: AWS::IAM::User
    Properties:
      Path: "/"
      Policies:
      - PolicyName: bucketAccess
        PolicyDocument:
          Version: 2012-10-17
          Statement:
            - Effect: Allow
              Action: [ "s3:*" ]
              Resource:
                Fn::Join:
                  - ""
                  -
                    - "arn:aws:s3:::"
                    - Ref: s3Bucket
            - Effect: Deny
              Action: [ "s3:*" ]
              NotResource:
                Fn::Join:
                  - ""
                  -
                    - "arn:aws:s3:::"
                    - Ref: s3Bucket

  accessKey:
    Type: AWS::IAM::AccessKey
    Properties:
      UserName:
        Ref: user


Outputs:
  BucketURL:
    Description: Bucket top level URL DNS name
    Value:
      Ref: dnsEntry

  AccessKey:
    Description: AccessKey for IAM user
    Value:
      Ref: accessKey

  SecretKey:
    Description: SecretKey for IAM user
    Value:
      Fn::GetAtt:
        - accessKey
        - SecretAccessKey
